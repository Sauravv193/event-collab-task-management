# Backend-only build for Render deployment
# This builds only the Spring Boot backend without frontend

# Backend build stage
FROM maven:3.9.4-openjdk-21-slim as backend-builder
WORKDIR /app/backend

# Copy Maven files first for better caching
COPY backend/pom.xml .
COPY backend/mvnw .
COPY backend/.mvn .mvn

# Make mvnw executable
RUN chmod +x ./mvnw

# Download dependencies (this layer will be cached if pom.xml doesn't change)
RUN ./mvnw dependency:go-offline -B

# Copy source code
COPY backend/src ./src

# Build the application with production profile
RUN ./mvnw clean package -DskipTests -B -Pprod

# Production stage
FROM openjdk:21-jdk-slim
WORKDIR /app

# Install curl for health checks and clean up
RUN apt-get update && \
    apt-get install -y curl && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy backend jar
COPY --from=backend-builder /app/backend/target/*.jar app.jar

# Change ownership to appuser
RUN chown appuser:appuser app.jar

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/actuator/health || exit 1

# JVM optimization for containers
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC -Xms256m -Xmx512m"

# Set active profile
ENV SPRING_PROFILES_ACTIVE=prod

# Run the application
CMD java $JAVA_OPTS -jar app.jar